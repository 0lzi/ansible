---
- name: Install prequisite packages
  ansible.builtin.apt:
    name: "{{ lancache_pkgs }}"
    state: present

- name: Set up lancache dir
  ansible.builtin.file:
    path: /srv/lancache
    state: directory
    mode: '0755'

- name: Set up SteamPrefill
  ansible.builtin.file:
    path: /srv/SteamPrefill
    state: directory
    mode: '0755'

- name: Download SteamPrefill updater
  ansible.builtin.get_url:
    url: "https://raw.githubusercontent.com/tpill90/steam-lancache-prefill/master/scripts/update.sh"
    dest: /srv/SteamPrefill/update.sh
    mode: '0755'

- name: Run update.sh
  ansible.builtin.shell:
    cmd: set -o pipefail && ./update.sh
    executable: /bin/bash
    chdir: /srv/SteamPrefill
  register: update_script
  changed_when: false

- name: Create systemd timer for SteamPrefill
  ansible.builtin.template:
    src: steamprefill.timer
    dest: /etc/systemd/system/steamprefill.timer
  changed_when: true
  notify:
    - systemd-daemon
    - systemd-timer

- name: Create systemd timer for SteamPrefill
  ansible.builtin.template:
    src: steamprefill.service
    dest: /etc/systemd/system/steamprefill.service
  changed_when: true
  notify:
    - systemd-daemon
    - systemd-service

- name: Set up Docker network
  community.docker.docker_network:
    name: lancache

- name: Disable systemd-resolved DNSStubListener
  ansible.builtin.blockinfile:
    path: "/etc/systemd/resolved.conf"
    marker: "#<!-- {mark} ANSIBLE MANAGED BLOCK -->"
    block: |
      DNSStubListener=no

- name: Remove old resolve.conf
  ansible.builtin.file:
    path: "/etc/resolv.conf"
    state: absent

- name: Symlink new resolv.conf
  ansible.builtin.file:
    src: "/var/run/systemd/resolve/resolv.conf"
    dest: "/etc/resolv.conf"
    state: link
    owner: root
    group: root
  notify: 
    - systemd-resolved

- name: Deploy lancache DNS
  community.docker.docker_container:
    name: dns
    image: "lancachenet/lancache-dns:latest"
    networks:
      - name: lancache
    env:
      USE_GENERIC_CACHE: "true"
      LANCACHE_IP: "{{ ansible_default_ipv4.address }}"
      DNS_BIND_IP: "{{ ansible_default_ipv4.address }}"
      UPSTREAM_DNS: "{{ pihole }}"
      CACHE_ROOT: "/srv/lancache"
      CACHE_DISK_SIZE: "2000g"
      MIN_FREE_DISK: "10g"
      CACHE_INDEX_SIZE: "500m"
      CACHE_MAX_AGE: "3650d"
      TZ: "Europe/London"
    ports:
      - "{{ ansible_default_ipv4.address }}:53:53/udp"
      - "{{ ansible_default_ipv4.address }}:53:53/tcp"
    restart_policy: unless-stopped

- name: Deploy lancache Monolithic
  community.docker.docker_container:
    name: monolithic
    image: "lancachenet/monolithic:latest"
    networks:
      - name: lancache
    env:
      USE_GENERIC_CACHE: "true"
      LANCACHE_IP: "{{ ansible_default_ipv4.address }}"
      DNS_BIND_IP: "{{ ansible_default_ipv4.address }}"
      UPSTREAM_DNS: "{{ pihole }}"
      CACHE_ROOT: "/srv/lancache"
      CACHE_DISK_SIZE: "2000g"
      MIN_FREE_DISK: "10g"
      CACHE_INDEX_SIZE: "500m"
      CACHE_MAX_AGE: "3650d"
      TZ: "Europe/London"
    ports:
      - "80:80/tcp"
      - "443:443/tcp"
    volumes:
      - /srv/lancache/cache:/data/cache
      - /srv/lancache/logs:/data/logs
    restart_policy: unless-stopped


