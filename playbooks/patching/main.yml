---
- name: Patching Raspberry pi
  hosts: all
  become: true
  gather_facts: true
#  vars_files:
#    ./vars/vars.yml

  pre_tasks:
    - name: Update Apt Cache
      ansible.builtin.apt:
        update_cache: true
        cache_valid_time: 3600

    - name: Get running containers
      community.docker.docker_host_info:
        containers: true
      register: pre_reboot

    - name: Show Number of running containers
      ansible.builtin.debug:
        msg: "Hostname - {{ pre_reboot.host_info.Name }} has {{ pre_reboot.host_info.ContainersRunning }} Containers running"

  tasks:
    - name: Update all packages
      ansible.builtin.apt:
        name: "*"
        state: latest

    - name: Check if reboot required
      register: reboot_required_file
      ansible.builtin.stat: path=/var/run/reboot-required get_md5=no

    - name: Stop running containers
      community.docker.docker_container:
        name: "{{ item }}"
        state: stopped
      loop: "{{ pre_reboot.containers | map(attribute='Id') | list }}"
      when: reboot_required_file.stat.exists

- name: Reboot nfs first
  hosts: nfs-server
  become: true

  tasks:
    - name: Check if reboot required
      register: reboot_required_file
      ansible.builtin.stat: path=/var/run/reboot-required get_md5=no

    - name: Reboot the if kernel updated
      ansible.builtin.reboot:
        msg: "Reboot initiated by Ansible for kernel updates"
      when: reboot_required_file.stat.exists

    - name: Start containers
      community.docker.docker_container:
        name: "{{ item }}"
        state: started
      loop: "{{ pre_reboot.containers | map(attribute='Id') | list }}"

    - name: Pause for Containers to come back up
      ansible.builtin.pause:
        seconds: 20

    - name: Get running containers
      community.docker.docker_host_info:
        containers: true
      register: post_reboot

    - name: Compare Pre - Post Containers
      ansible.builtin.debug:
        msg: "Pre-reboot Containers {{ pre_reboot.host_info.ContainersRunning }} - Post-reboot Containers {{ post_reboot.host_info.ContainersRunning }}"
      failed_when: pre_reboot.host_info.ContainersRunning != post_reboot.host_info.ContainersRunning

- name: Reboot Others
  hosts: pi , !nfs-server
  become: true

  tasks:
    - name: Check if reboot required
      register: reboot_required_file
      ansible.builtin.stat: path=/var/run/reboot-required get_md5=no

    - name: Reboot the if kernel updated
      ansible.builtin.reboot:
        msg: "Reboot initiated by Ansible for kernel updates"
      when: reboot_required_file.stat.exists

    - name: Start containers
      community.docker.docker_container:
        name: "{{ item }}"
        state: started
      loop: "{{ pre_reboot.containers | map(attribute='Id') | list }}"

    - name: Pause for Containers to come back up
      ansible.builtin.pause:
        seconds: 20

    - name: Get running containers
      community.docker.docker_host_info:
        containers: true
      register: post_reboot

    - name: Compare Pre - Post Containers
      ansible.builtin.debug:
        msg: "Pre-reboot Containers {{ pre_reboot.host_info.ContainersRunning }} - Post-reboot Containers {{ post_reboot.host_info.ContainersRunning }}"
      failed_when: pre_reboot.host_info.ContainersRunning != post_reboot.host_info.ContainersRunning
