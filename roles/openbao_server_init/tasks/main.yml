- name: Update apt and install unzip
  ansible.builtin.apt:
    name:
      - unzip
    update_cache: true

- name: Check if openbao installed
  ansible.builtin.stat:
    path: "/usr/bin/bao"
  register: openbao_installed

- name: Download openbao deb for {{ openbao_version }}
  ansible.builtin.apt:
    deb: "{{ openbao_url }}"
  when:
    - not openbao_installed.stat.exists

- name: Create non-priv openbao user
  ansible.builtin.user:
    name: openbao
    state: present
    home: "{{ openbao_config_dir }}"
    shell: /bin/bash
    groups:
      - openbao

- name: Create openbao directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: openbao
    group: openbao
    mode: "0750"
  with_items:
    - "{{ openbao_data_dir }}"
    - "{{ openbao_config_dir }}"
    - "{{ openbao_cert_dir }}"

- name: Create unseal key # noqa no-changed-when
  ansible.builtin.command:
    cmd: "openssl rand -out {{ openbao_config_dir }}/unseal-{{ ansible_date_time.date }}.key 32"

- name: Copy openbao.hcl
  ansible.builtin.template:
    src: openbao.hcl.j2
    dest: "{{ openbao_config_dir }}/openbao.hcl"
    owner: openbao
    group: openbao
    mode: '0640'
  notify: Restart_openbao

- name: Copy service file
  ansible.builtin.template:
    src: openbao.service.j2
    dest: /etc/systemd/system/openbao.service
    owner: openbao
    group: openbao
    mode: '0640'
  notify:
    - Systemd
    - Restart_openbao

- name: Flush handlers
  ansible.builtin.meta: flush_handlers

- name: Set primary node
  ansible.builtin.set_fact:
    primary_node: "{{ groups[openbao_cluster_name][0] }}"

- name: Get status # noqa no-changed-when command-instead-of-shell
  ansible.builtin.shell: /usr/bin/bao status
  environment:
    VAULT_ADDR: "http://127.0.0.1:8200"
  register: bao_status
  delegate_to: "{{ primary_node }}"
  run_once: true
  failed_when: bao_status.rc not in [0,2]

- name: Parse Initialized status
  set_fact:
    openbao_initialized: "{{ bao_status.stdout_lines | select('search', '^Initialized') | first | regex_search('true|false') }}"

- name: dbg
  ansible.builtin.debug:
    msg: "{{ openbao_initialized }}"

- name: Init openbao # noqa no-changed-when command-instead-of-shell
  ansible.builtin.shell: /usr/bin/bao operator init
  environment:
    VAULT_ADDR: "http://127.0.0.1:8200"
  register: bao_init
  delegate_to: "{{ primary_node }}"
  run_once: true
  when: not openbao_initialized

- name: Set unseal keys and root token from bao_init output
  set_fact:
    unseal_keys: "{{ bao_init.stdout_lines | select('match', '^Unseal Key \\d+:') | map('regex_replace', '^Unseal Key \\d+: ', '') | list }}"
    root_token: "{{ (bao_init.stdout_lines | select('match', '^Initial Root Token:') | list).0.split(': ')[1] }}"
  when: not openbao_initialized

- name: Unseal vault # noqa no-changed-when command-instead-of-shell
  ansible.builtin.shell: /usr/bin/bao operator unseal {{ item }}
  environment:
    VAULT_ADDR: "http://127.0.0.1:8200"
  loop: "{{ unseal_keys[0:3] }}"
  register: bao_init
  delegate_to: "{{ primary_node }}"
  run_once: true
  when:
    - not openbao_initialized

- name: Check vault health
  ansible.builtin.uri:
    url: "http://{{ hostvars[primary_node].ansible_default_ipv4.address }}:8200/v1/sys/health"
    validate_certs: false
    status_code:
      - 503
      - 200
      - 400
  delegate_to: "{{ primary_node }}"
  run_once: true
  register: cluster_health

- name: Display root token
  ansible.builtin.debug:
    msg: "You can now login with root_token: {{ root_token }}"
  when: not openbao_initialized

- name: Write Unseal and Root token to file
  ansible.builtin.copy:
    content: |
      unseal_key_1: "{{ unseal_keys[0] }}"
      unseal_key_2: "{{ unseal_keys[1] }}"
      unseal_key_3: "{{ unseal_keys[2] }}"
      unseal_key_4: "{{ unseal_keys[3] }}"
      unseal_key_5: "{{ unseal_keys[4] }}"
      root_token: "{{ root_token }}"
    dest: "{{ playbook_dir }}/inventories/homelab/group_vars/{{ openbao_cluster_name }}/unseal.yml"
  delegate_to: localhost
  run_once: true

- name: Join node to cluster
  ansible.builtin.shell: |
    /usr/bin/bao operator raft join "http://{{ primary_node }}:8200"
  environment:
    VAULT_ADDR: "http://127.0.0.1:8200"
  delegate_to: "{{ groups[openbao_cluster_name][1] }}"
  run_once: true

- name: Join node to cluster
  ansible.builtin.shell: |
    /usr/bin/bao operator raft join "http://{{ primary_node }}:8200"
  environment:
    VAULT_ADDR: "http://127.0.0.1:8200"
  delegate_to: "{{ groups[openbao_cluster_name][2] }}"
  run_once: true
