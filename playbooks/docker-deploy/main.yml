---
- name: Deploy containers to Pi Hosts
  hosts: all
  become: false
  remote_user: pi
  gather_facts: true
  vars_files:
    - vars/vars.yml

  tasks:
    - name: Deploy Swag
      community.docker.docker_container:
        name: swag
        image: linuxserver/swag
        capabilities:
          - NET_ADMIN
        env:
          DOCKER_MODS: "linuxserver/mods:swag-dashboard|linuxserver/mods:swag-auto-reload"
          PUID: "1000"
          PGID: "1000"
          TZ: "Europe/London"
          URL: "{{ SWAG_URL | string }}"
          SUBDOMAINS: "{{ SWAG_SUBDOMAINS | string }}"
          VALIDATION: "{{ SWAG_VALIDATION | string }}"
          EXTRA_DOMAINS: "{{ SWAG_EXTRA_DOMAINS | string }}"
        ports:
          - "80:80"
          - "443:443"
          - "81:81"
        volumes:
          - /home/pi/nfsdocker-volumes/swag:/config
        restart_policy: unless-stopped
      when: inventory_hostname in groups['pi1']

#    - name: Deploy Wireguard
    - name: Deploy Wireguard
      community.docker.docker_container:
        name: wireguard
        image: linuxserver/wireguard
        capabilities:
          - NET_ADMIN
          - SYS_MODULE
        env:
          PUID: "1000"
          PGID: "1000"
          TZ: "Europe/London"
          SERVERURL: "{{ WG_SERVERURL | string }}"
          SERVERPORT: "{{ WG_SERVERPORT | string }}"
          PEERS: "{{ WG_PEERS | string }}"
          PEERDNS: "{{ WG_PEERDNS | string }}"
          INTERNAL_SUBNET: "{{ WG_INTERNAL_SUBNET | string }}"
        volumes:
          - /home/pi/nfsdocker-volumes/wireguard/config:/config
          - /lib/modules:/lib/modules
        sysctls:
          net.ipv4.conf.all.src_valid_mark: 1
        restart_policy: unless-stopped
      when: inventory_hostname in groups['pi1']
#
#    - name: Deploy PiHole1
    - name: Deploy PiHole1
      community.docker.docker_container:
        name: pihole
        image: pihole/pihole:latest
        capabilities:
          - NET_ADMIN
        network_mode:
          - host
        env:
          TZ: "Europe/London"
          WEBPASSWORD: "{{ PIHOLE_PASSWORD | string }}"
        volumes:
          - /home/pi/nfsdocker-volumes/pihole/etc-pihole:/etc/pihole
          - /home/pi/nfsdocker-volumes/pihole/etc-dnsmasq.d:/etc/dnsmasq.d
        restart_policy: unless-stopped
      when: inventory_hostname in groups['pi4']

#    - name: Deploy PiHole2
    - name: Deploy PiHole2
      community.docker.docker_container:
        name: pihole
        image: pihole/pihole:latest
        capabilities:
          - NET_ADMIN
        network_mode:
          - host
        env:
          TZ: "Europe/London"
          WEBPASSWORD: "{{ PIHOLE_PASSWORD | string }}"
        volumes:
          - /home/pi/nfsdocker-volumes/pihole2/etc-pihole:/etc/pihole
          - /home/pi/nfsdocker-volumes/pihole2/etc-dnsmasq.d:/etc/dnsmasq.d
        restart_policy: unless-stopped
      when: inventory_hostname in groups['pi3']

#    - name: Deploy Portainer
    - name: Deploy Portainer
      community.docker.docker_container:
        name: portainer
        image: portainer/portainer-ee
        env:
          TZ: "Europe/London"
          PGID: "1000"
          PUID: "1000"
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock
          - /home/pi/nfsdocker-volumes/portainer/data:/data
        ports:
          - "8000:8000"
          - "9000:9000"
          - "9443:9443"
        restart_policy: unless-stopped
      when: inventory_hostname in groups['pi4']

#    - name: Deploy Portainer Agents
    - name: Deploy Portainer Agent 1
      community.docker.docker_container:
        name: portainer
        image: portainer/agent:2.17.1
        env:
          EDGE: "1"
          EDGE_ID: "{{ EDGE_ID1 | string }}"
          EDGE_KEY: "{{ EDGE_KEY1 | string }}"
          CAP_HOST_MANAGEMENT: "1"
          EDGE_INSECURE_POLL: "1"
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock
          - /home/pi/nfsdocker-volumes/portainer_agent:/data
          - /:/host
          - /home/pi/nfsdocker-volumes/portainer_agent:/var/lib/docker/volumes
        restart_policy: unless-stopped
      when: inventory_hostname in groups['pi1']

    - name: Deploy Portainer Agent 2
      community.docker.docker_container:
        name: portainer
        image: portainer/agent:2.17.1
        env:
          EDGE: "1"
          EDGE_ID: "{{ EDGE_ID2 | string }}"
          EDGE_KEY: "{{ EDGE_KEY2 | string }}"
          CAP_HOST_MANAGEMENT: "1"
          EDGE_INSECURE_POLL: "1"
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock
          - /home/pi/nfsdocker-volumes/portainer_agent:/data
          - /:/host
          - /home/pi/nfsdocker-volumes/portainer_agent:/var/lib/docker/volumes
        restart_policy: unless-stopped
      when: inventory_hostname in groups['pi2']

    - name: Deploy Portainer Agent 3
      community.docker.docker_container:
        name: portainer
        image: portainer/agent:2.17.1
        env:
          EDGE: "1"
          EDGE_ID: "{{ EDGE_ID3 | string }}"
          EDGE_KEY: "{{ EDGE_KEY3 | string }}"
          CAP_HOST_MANAGEMENT: "1"
          EDGE_INSECURE_POLL: "1"
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock
          - /home/pi/nfsdocker-volumes/portainer_agent:/data
          - /:/host
          - /home/pi/nfsdocker-volumes/portainer_agent:/var/lib/docker/volumes
        restart_policy: unless-stopped
      when: inventory_hostname in groups['pi3']

#    - name: Deploy Nextcloud

    - name: Deploy Nextcloud mariadb
      community.docker.docker_container:
        name: mariadb
        image: linuxserver/mariadb:10.6.12
        env:
          PUID: "1000"
          PGID: "1000"
          TZ: "Europe/London"
          MYSQL_ROOT_PASSWORD: "{{ MYSQL_ROOT_PASSWORD | string }}"
          MYSQL_DATABASE: "{{ MYSQL_DATABASE | string }}"
          MYSQL_USER: "{{ MYSQL_USER | string }}"
          MYSQL_PASSWORD: "{{ MYSQL_PASSWORD | string }}"
        volumes:
          - /home/pi/nfsdocker-volumes/mariadb-new:/config
        restart_policy: unless-stopped
      when: inventory_hostname in groups['pi2']


    - name: Deploy Nextcloud
      community.docker.docker_container:
        name: nextcloud
        image: linuxserver/nextcloud:24
        env:
          PUID: "1000"
          PGID: "1000"
          TZ: "Europe/London"
        ports:
          - "443:443"
          - "80:80"
        volumes:
          - /home/pi/nfsdocker-volumes/nextcloud-new/config:/config
          - /home/pi/nfsdocker-volumes/nextcloud-new/data:/data
        restart_policy: unless-stopped
      when: inventory_hostname in groups['pi2']

#    - name: Deploy Fitness Blog

    - name: Deploy fitness-blog
      community.docker.docker_container:
        name: fitness-blog
        image: ghost:4.48.8
        env:
          url: "{{ URL_FIT | string }}"
          mail__transport: "SMTP"
          mail__from: "{{ FITNESS_MAIL_FROM | string }}"
          mail__options__service: "SMTP"
          mail__options__host: "{{ MAIL_HOST | string }}"
          mail__options__port: "587"
          mail__options__auth__user: "{{ MAIL_AUTH | string }}"
          mail__options__auth__pass: "{{ MAIL_AUTH_PASS | string }}"
        ports:
          - "3005:2368"
        volumes:
          - /home/pi/nfsdocker-volumes/fitness-blog/content:/var/lib/ghost/content
        restart_policy: unless-stopped
      when: inventory_hostname in groups['pi2']


#    - name: Deploy Uptime Kuma

    - name: Deploy uptime-kuma
      community.docker.docker_container:
        name: uptime-kuma
        image: louislam/uptime-kuma:1
        ports:
          - "3001:3001"
        volumes:
          - /home/pi/nfsdocker-volumes/uptime-kuma-data:/app/data
        restart_policy: unless-stopped
      when: inventory_hostname in groups['pi2']
